/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 13.5 		*/
/*  Created On : 22-Apr-2018 1:36:28 PM 				*/
/*  DBMS       : MySql 						*/
/* ---------------------------------------------------- */

SET FOREIGN_KEY_CHECKS=0
;

/* Drop Tables */

DROP TABLE IF EXISTS `Cook` CASCADE
;

DROP TABLE IF EXISTS `Manager` CASCADE
;

DROP TABLE IF EXISTS `Menu` CASCADE
;

DROP TABLE IF EXISTS `MenuRecipe` CASCADE
;

DROP TABLE IF EXISTS `ObjectionsToTheMenu` CASCADE
;

DROP TABLE IF EXISTS `Recipe` CASCADE
;

DROP TABLE IF EXISTS `Request` CASCADE
;

DROP TABLE IF EXISTS `User` CASCADE
;

/* Create Tables */

CREATE TABLE `Cook`
(
	`Id` VARCHAR(50) NULL COMMENT 'ID of the Cook',
	`CookID` INT NOT NULL AUTO_INCREMENT,
	`UserID` INT NULL,
	CONSTRAINT `PK_Cook` PRIMARY KEY (`CookID` ASC)
)
COMMENT = 'A person working in the restaurant with access to the web application for the management of the menu and recipes. Each Cook has its own account in our application and unique ID.'

;

CREATE TABLE `Manager`
(
	`Id` VARCHAR(50) NULL COMMENT 'ID of the Manager',
	`ManagerID` INT NOT NULL AUTO_INCREMENT,
	`UserID` INT NULL,
	CONSTRAINT `PK_Manager` PRIMARY KEY (`ManagerID` ASC)
)
COMMENT = 'Manager responsible for the approving/declining of the menu and ingredients requested by the cook. Each Manager has its own account in our application and unique ID.'

;

CREATE TABLE `Menu`
(
	`Date` VARCHAR(50) NULL COMMENT 'Date of the Menu',
	`State` VARCHAR(50) NULL COMMENT 'State of the Menu',
	`MenuID` INT NOT NULL AUTO_INCREMENT,
	`CookID` INT NULL,
	`ManagerID` INT NULL,
	CONSTRAINT `PK_Menu` PRIMARY KEY (`MenuID` ASC)
)
COMMENT = 'Menu represents a set of meals planned to be cooked and serves at the specific day.'

;

CREATE TABLE `MenuRecipe`
(
	`RecipeID` INT NULL,
	`MenuID` INT NULL
)

;

CREATE TABLE `ObjectionsToTheMenu`
(
	`Comments` VARCHAR(50) NULL COMMENT 'Comments written by the Manager',
	`Date` VARCHAR(50) NULL COMMENT 'Date of the Objections',
	`ObjectionsToTheMenuID` INT NOT NULL,
	`ManagerID` INT NULL,
	`MenuID` INT NULL,
	CONSTRAINT `PK_ObjectionsToTheMenu` PRIMARY KEY (`ObjectionsToTheMenuID` ASC)
)
COMMENT = 'Objections to the Menu are written by the Manager if Menu was declined'

;

CREATE TABLE `Recipe`
(
	`Description` VARCHAR(50) NULL COMMENT 'Description of the recipe for dish',
	`Name` VARCHAR(50) NULL COMMENT 'Name of the recipe for dish',
	`RecipeID` INT NOT NULL AUTO_INCREMENT,
	`CookID` INT NULL,
	CONSTRAINT `PK_Recipe` PRIMARY KEY (`RecipeID` ASC)
)
COMMENT = 'Recipe represents information about dish(name and description)'

;

CREATE TABLE `Request`
(
	`Date` VARCHAR(50) NULL COMMENT 'Date of the request',
	`Name` VARCHAR(50) NULL COMMENT 'Name of the Request',
	`State` VARCHAR(50) NULL COMMENT 'State of the Request',
	`RequestID` INT NOT NULL AUTO_INCREMENT,
	`MenuID` INT NULL,
	CONSTRAINT `PK_Request` PRIMARY KEY (`RequestID` ASC)
)
COMMENT = 'Request represents a set of ingredients  that are missing for cooking dishes from the Menu'

;

CREATE TABLE `User`
(
	`FirstName` VARCHAR(50) NULL COMMENT 'First name of the User',
	`LastName` VARCHAR(50) NULL COMMENT 'Last name of the User',
	`Login` VARCHAR(50) NULL COMMENT 'Login of the User',
	`Password` VARCHAR(50) NULL COMMENT 'Password of the User',
	`UserID` INT NOT NULL AUTO_INCREMENT,
	CONSTRAINT `PK_User` PRIMARY KEY (`UserID` ASC)
)
COMMENT = 'User represents account created by Manager or Cook and it holds information(first name, last name, login and password).'

;

/* Create Foreign Key Constraints */

ALTER TABLE `Cook`
 ADD CONSTRAINT `FK_Cook_is`
	FOREIGN KEY (`UserID`) REFERENCES `User` (`UserID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Manager`
 ADD CONSTRAINT `FK_Manager_is`
	FOREIGN KEY (`UserID`) REFERENCES `User` (`UserID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Menu`
 ADD CONSTRAINT `FK_Menu_Cook`
	FOREIGN KEY (`CookID`) REFERENCES `Cook` (`CookID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Menu`
 ADD CONSTRAINT `FK_Menu_Manager`
	FOREIGN KEY (`ManagerID`) REFERENCES `Manager` (`ManagerID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `MenuRecipe`
 ADD CONSTRAINT `FK_MenuRecipe_Recipe`
	FOREIGN KEY (`RecipeID`) REFERENCES `Recipe` (`RecipeID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `MenuRecipe`
 ADD CONSTRAINT `FK_MenuRecipe_Menu`
	FOREIGN KEY (`MenuID`) REFERENCES `Menu` (`MenuID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `ObjectionsToTheMenu`
 ADD CONSTRAINT `FK_Objections to the menu_created by`
	FOREIGN KEY (`ManagerID`) REFERENCES `Manager` (`ManagerID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `ObjectionsToTheMenu`
 ADD CONSTRAINT `FK_Objections to the menu_related to`
	FOREIGN KEY (`MenuID`) REFERENCES `Menu` (`MenuID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Recipe`
 ADD CONSTRAINT `FK_Recipe_added by`
	FOREIGN KEY (`CookID`) REFERENCES `Cook` (`CookID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Request`
 ADD CONSTRAINT `FK_Request_Menu`
	FOREIGN KEY (`MenuID`) REFERENCES `Menu` (`MenuID`) ON DELETE No Action ON UPDATE No Action
;

SET FOREIGN_KEY_CHECKS=1
;

INSERT INTO `User` (`FirstName`, `LastName`, `Login`, `Password`, `UserID`) VALUES ('Manager', 'A', 'manager_a', 'cb@manager', '1');
INSERT INTO `User` (`FirstName`, `LastName`, `Login`, `Password`, `UserID`) VALUES ('Cook', 'A', 'cook_a', 'cb@cook', '2');
